paket "syntax"

"tawa" ist importiert

typ Boolean ist logik

typ Hallöchen ist struktur
(
    Ok logik
    Es zeiger auf logik
)

typ Es ist struktur (
    Ok logik
)

funk haupt()
(
    nicht(cast Wahr nach Boolean)
)

funk NeuHallöchen(): Hallöchen
(
    b := 1
    a := neu b

    c := deref a
    lösche a

    lösche neu stack Hallöchen (
        Ok ist Falsch
    )
    stack Hallöchen (
        Ok ist Falsch
    )
)

funk Foo(): ganz
(
    deref neu 1
)

funk NeuHallöchenZeiger(): zeiger auf Hallöchen
(
    neu stack Hallöchen (
        Ok ist Falsch
    )
)

funk nicht(a: Boolean): Boolean
(
    wenn cast a nach logik
        cast Falsch nach Boolean
    sonst
        cast Wahr nach Boolean
)

funk main()
(
    NeuHallöchen()

    nicht(cast Wahr nach Boolean)
)

funk NeuEs(): Es
(
    a := stack Es( )
)
